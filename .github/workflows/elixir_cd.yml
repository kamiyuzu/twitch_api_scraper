name: Elixir CD

on:
  schedule:
  - cron: "0 8 * * *"

jobs:
  build:

    name: Test update commit and push
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12.2' # Define the elixir version [required]
        otp-version: '23.2.5' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
          ~/.cache/dialyzer/plts
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Unlock dependencies
      run: mix deps.unlock --check-unused
    - name: Compile dependencies
      run: mix compile --warnings-as-errors
    - name: Check format
      run: mix format --dry-run --check-formatted || exit 1
    - name: Check tests
      run: mix test
    - name: Check style guide
      run: |
        set +e
        max_credo_score=0
        mix credo -C custom --strict
        score=$?
        if [ $score -gt $max_credo_score ]; then
          exit $score
        fi
        exit 0
    - name: Create persistent lookup table
      run: mix dialyzer --plt
    - name: Ensure correct typings
      run: mix dialyzer --halt-exit-status || exit 1
    - name: Run mix task
      run: ./export.sh
    - name: Simple commit
      if: ${{ success() }}
      uses: zwaldowski/git-commit-action@v1
      with:
        working_directory: . # optional, default is .
        commit_message: Automatic commit by github periodic action # default is Automated commit
        author_name: kamiyuzu # optional, default is GitHub Actions
        author_email: alberto.re.arr@gmail.com # optional, default is actions@github.com
    - name: Push to main
      if: ${{ success() }}
      uses: mikeal/publish-to-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH_NAME: 'main' #optional defaults to master
    - name: Create release
      if: ${{ success() }}
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          lib/fixtures/html/twitch_api.gzip
          lib/fixtures/json/twitch_api.json
          lib/fixtures/json/twitch_api_pretty.json
